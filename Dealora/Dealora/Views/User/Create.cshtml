@model Dealora.ViewModels.CreateUserViewModel
@using Dealora.Models
@{
    ViewBag.Title = "Create User";
}

<h2>Create User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <div class="row">
            @Html.Partial("_Sidebar") <!-- Assuming you have a sidebar partial -->
            <div class="col-md-9">
                <div class="card">
                    <div class="card-body">
                        <h4 class="mb-4">User Creation</h4>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.FirstName, new { @class = "form-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.LastName, new { @class = "form-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Email, new { @class = "form-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.PhoneNumber, new { @class = "form-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Role, new { @class = "form-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.DropDownListFor(x => x.Role, new SelectList(Enum.GetValues(typeof(Dealora.Models.UserRole))), "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessage("Role", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3"></div>
                            <div class="col-md-9">
                                <button type="submit" class="btn btn-primary">Create User</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
