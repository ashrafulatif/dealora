@model IEnumerable<Dealora.Models.Product>

@{
    ViewBag.Title = "Index";
}


<script>
    setTimeout(() => {
        const box = document.getElementById('hide');
        box.style.display = 'none';
    }, 5000)
</script>


<h2>Product Informations</h2>
<hr />
<p>
    @Html.ActionLink("Create New Product", "Create", null, new { @class = "btn btn-success" })
</p>

@if (TempData["msgAdd"] != null)
{
    <div id="hide" , class="alert alert-success">
        <strong>Good work !! </strong> @TempData["msgAdd"]
    </div>
}

<table class="table table-hover table-bordered" id="ProductTable">
    <thead class="table-info">
        <tr>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Category.Name)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.User.FirstName)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.StockQuantity)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th scope="col">Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-secondary">
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockQuantity)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@Url.Content(item.ImageUrl)" alt="Product Image" style="width: 50px; height: auto;" />
                    }
                    else
                    {
                        <p>No image available</p>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateAdded)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning btn-sm p-1" title="Edit" style="width: 30px; height: 30px; display: inline-flex; align-items: center; justify-content: center; ">
                        <i class="bi bi-pencil"></i>
                    </a>

                    <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-info btn-sm p-1" title="Details" style="width: 30px; height: 30px; display: inline-flex; align-items: center; justify-content: center; ">
                        <i class="bi bi-info-circle"></i>
                    </a>

                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm p-1" title="Delete" style="width: 30px; height: 30px; display: inline-flex; align-items: center; justify-content: center; ">
                        <i class="bi bi-trash"></i>
                    </a>
                </td>


            </tr>
        }
    </tbody>

</table>


@section scripts {
    <!-- jQuery and DataTables -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">


    <script>
        $(document).ready(function () {
            // Initialize DataTable
            var table = $('#ProductTable').DataTable({
                "dom": '<"top"f>t<"bottom"p><"clear">', // Custom placement of elements
                "language": {
                    "search": "", // Remove the default 'Search' label
                    "searchPlaceholder": "Type to search..." // Placeholder text
                }
            });

            // Style the search box
            $('#UsersTable_filter input')
                .addClass('form-control') // Add Bootstrap styling
                .attr('placeholder', 'Search users...') // Add custom placeholder
                .css({
                    'width': '300px',
                    'display': 'inline-block',
                    'margin-left': '10px'
                });

            // Optionally, adjust the table wrapper for a cleaner look
            $('#UsersTable_wrapper .top').css({
                'display': 'flex',
                'justify-content': 'flex-end',
                'margin-bottom': '10px'
            });
        });
    </script>
}
